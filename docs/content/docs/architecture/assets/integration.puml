
@startuml C4_Elements

'!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include <c4/C4_Container.puml>
!include <tupadr3/devicons/react>
!include <tupadr3/devicons/java>
!include <tupadr3/devicons/postgresql.puml>
!include <tupadr3/devicons/python.puml>
!include <tupadr3/devicons/dotnet.puml>
!include <tupadr3/devicons/docker.puml>
!include <tupadr3/devicons/msql_server.puml>
!include <tupadr3/devicons2/vuejs>
!include <tupadr3/devicons2/dotnetcore>
!include <tupadr3/devicons2/gitlab>
!include <tupadr3/devicons2/hugo>
!include <tupadr3/devicons2/kubernetes>
!include <tupadr3/devicons2/oauth>
!include <tupadr3/font-awesome/users>
!include <tupadr3/font-awesome/server>
!include <tupadr3/font-awesome/envelope>
!include <tupadr3/font-awesome/server>

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons
!define FONTAWESOME https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/font-awesome-5

scale 0.7

'skinparam linetype ortho
'skinparam linetype polyline
skinparam wrapWidth 200
skinparam titleFontSize 20
skinparam HyperlinkUnderline false
skinparam backgroundColor WhiteSmoke

title Диаграмма решения\n Архитектурная платформа \n\n\n

'SET_SKETCH_STYLE($bgColor="lightblue", $fontColor="darkblue", $warningColor="darkred", $footerWarning="Sketch", $footerText="Created for discussion")

' PNG with font jlm_cmmi10 (typically another font is used)
'SET_SKETCH_STYLE($fontName="jlm_cmmi10")

' SVG with fallback fonts MS Gothic,Comic Sans MS, Comic Sans, Chalkboard SE, Comic Neue, cursive, sans-serif (typically without "MS Gothic")
'SET_SKETCH_STYLE($fontName="MS Gothic,Comic Sans MS,Comic Sans,Chalkboard SE,Comic Neue,cursive,sans-serif")

'LAYOUT_WITH_LEGEND()
'LAYOUT_LANDSCAPE()
'LAYOUT_AS_SKETCH()
HIDE_STEREOTYPE()
SHOW_PERSON_PORTRAIT()

AddElementTag("microService", $sprite="java,scale=1", $shadowing="true", $legendText="microservice")
AddElementTag("backendContainer", $fontColor=$ELEMENT_FONT_COLOR, $shadowing="true", $bgColor="#335DA5", $shape=, $legendText="backend container (eight sided)")
AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="lightSkyBlue", $fontColor="black")
AddElementTag("queue", $bgColor="aliceblue", $fontColor="black", $borderColor="darkgrey", $borderThickness="2")
AddElementTag("extSaas", $bgColor="MediumSeaGreen", $shadowing="true", $fontColor="white", $borderColor="darkgrey", $borderThickness="2", $legendText="ЕЦПК SaaS сервисы (managed)")
AddElementTag("cluster", $bgColor="transparent", $fontColor="blue", $borderThickness=0, $sprite="kubernetes,scale=.75")
AddElementTag("users", $bgColor="transparent", $fontColor="teal", $borderThickness=0, $sprite="users,scale=.75")

AddRelTag("main", $sprite="", $lineThickness="2.1", $techn="", $textColor=$ARROW_FONT_COLOR, $lineColor=olive, $lineStyle=SolidLine())
AddRelTag("async", $textColor=$ARROW_FONT_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DashedLine())
AddRelTag("sync/async", $textColor=$ARROW_FONT_COLOR, $lineColor=$ARROW_COLOR, $lineStyle=DottedLine())

AddBoundaryTag("datahall", $sprite="server", $bgColor="", $fontColor="", $borderColor="", $shadowing="true", $shape="", $type="datahall", $legendText="", $borderStyle="", $borderThickness="", $legendSprite="")
AddBoundaryTag("cluster", $sprite="kubernetes,scale=.75", $bgColor="", $fontColor="", $borderColor="", $shadowing="true", $shape="", $type="cluster", $legendText="", $borderStyle="", $borderThickness="", $legendSprite="")

Person(user, "Пользователь", "Архитектор\n решений", $sprite="users", $tags="users")
Person(user_meth, "Пользователь", "Методолог", $sprite="users", $tags="users")
Person(admin, "Администратор")

System_Boundary(dh, "ЦОД", $tags=datahall) {
    System_Boundary(c, "cluster-main", $tags=cluster) {
        System_Boundary(common, "cluster-1", $tags=cluster) {

            System_Boundary(ap, "Архитектурная платформа\nproject:ap\nns: ap") {

                Container(keycloak, "Keycloak", "ap client", "", $tags="backendContainer", $sprite="oauth")
                Container(hugo_app, "HUGO DOCS", "Javascript, HTML", "Портал документации", $tags="backendContainer", $sprite="hugo")
                Container(system_1_app, "Система 1", "Java, Docker", "Система 1", $tags="backendContainer", $sprite="java", $link="c4_L2.puml")
                Container(system_2_app, "Система 2", "Vue.js, Docker", "Система 2", $tags="backendContainer", $sprite="vuejs")
                Container(etl_app, "ETL Service", ".NET, Docker", "Сервис ETL", $tags="backendContainer", $sprite="dotnetcore", $link="c4_L2_etl.puml")
                Container(plantuml_app, "PlantUML server", "Plantuml", "Сервис Plantuml", $tags="backendContainer", $sprite="server", $link="http://plantuml:8080")
            }

        }

        System_Boundary(devsec, "cluster-2", $tags=cluster) {

            System_Boundary(ext_services, "Сервисы SaaS") {
                Container_Ext(keycloak_central, "Keycloak", "Keycloak", "", $sprite=oauth, $tags="extSaas")
                Container_Ext(gitlab, "Gitlab", "ap repos", "Репозитории проекта" , $sprite=gitlab, $tags="extSaas")
            }
        }
    }
    System_Boundary(s3_b, "S3 Minio") {
        Container_Ext(s3, "S3 Minio", "ap bucket", "Бакет проекта", $tags="extSaas")
    }
}

Lay_D(admin, keycloak)
Lay_D(user, keycloak)
Lay_D(user_meth, keycloak)

Lay_D(keycloak_central, s3)
Lay_D(keycloak_central, gitlab)

Lay_D(keycloak, hugo_app)
Lay_D(system_2_app, plantuml_app)

Rel(user, keycloak, "Проектирует архитектуру", "HTTPS:443", $link="https://google.com")
Rel(user, system_2_app, "Запрашивает\nимпорт из Система 1\nПросматривает модели", "HTTPS:443", $link="https://google.com")
Rel(user, hugo_app, "Просматривает \nдокументацию", "HTTPS:443", $link="https://google.com")
Rel(user_meth, keycloak, "Ведет методологию", "HTTPS:443", $link="https://google.com")
Rel(admin, keycloak, "Администрирует", "HTTPS:443", $link="https://google.com")
Rel(admin, s3, "Загружает файлы конфигураций", "HTTPS:443", $link="http://google.com")
Rel(admin, keycloak_central, "Загружает файлы конфигураций", "HTTPS:443", $link="https://google.com")

Rel_R(keycloak, keycloak_central, "Синхронизация каталога пользователей", "")
Rel(keycloak_central, gitlab, "OIDC / OAuth", "", $link="https://google.com")
Rel(keycloak, system_1_app, "OIDC / OAuth", "", $link="https://google.com")

Rel_U(system_2_app, gitlab, "Читает YAML манифесты", "HTTPS:443")
Rel_U(etl_app, gitlab, "(4) Загружает YAML манифесты", "HTTPS:443", $tags=main)
Rel_U(etl_app, s3, "Запрашивает файлы конфигурации методологии", "HTTP:9000 / HTTPS:443")

Rel(system_2_app, etl_app, "(1) Запрашивает архитектуру", "TCP:8080:REST", $tags=main)
Rel(etl_app, system_1_app, "(2) Запрашивает архитектуру", "TCP:8080:REST", $tags=main)
Rel(system_1_app, etl_app, "(3) Возвращает архитектуру", "TCP:8080:REST", $tags=main)

BiRel_D(system_2_app, plantuml_app, "Рендер диаграмм", "TCP:8080:REST")
BiRel_D(hugo_app, plantuml_app, "Рендер диаграмм", "TCP:8080:REST")

@enduml
